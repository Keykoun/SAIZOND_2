---
title: "Информационно-аналитические технологии поиска угроз информационной безопасности"
format: 
    md:
        output-file: README.md
---

Лабораторная работа №6

## Цель

1.  Закрепить навыки исследования данных журнала Windows Active Directory
2.  Изучить структуру журнала системы Windows Active Directory
3.  Зекрепить практические навыки использования языка программирования R для обработки данных
4.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R

## План

1.  Установить пакет 'dplyr'
2.  Импорт и подготовка данных
3.  Анализ данных

## Шаги

### Установка пакетов

```{r}
library(dplyr)
```

```{r}
library(jsonlite)
```

```{r}
library(tidyr)
```

```{r}
library(xml2)
```

```{r}
library(rvest)
```

### Импорт и подготовка данных DNS

#### 1. Импортируйте данные в R

```{r}
url <- "https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz"
download.file(url, destfile = tf <- tempfile(fileext = ".tar.gz"), mode = "wb")
temp_dir <- tempdir()
untar(tf, exdir = temp_dir)
json_files <- list.files(temp_dir, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
data <- stream_in(file(json_files))
```

#### 2. Привести датасеты в вид "аккуратных данных", преобразовать типы столбцов в соответствии с типом данных

```{r}
data <- data %>% mutate(`@timestamp` = as.POSIXct(`@timestamp`, format = "%Y-%m-%dT%H:%M:%OSZ", tz = "UTC")) %>%rename(timestamp = `@timestamp`, metadata = `@metadata`)

```

#### 3. Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
glimpse(data)
```

### Анализ данных

#### 1. Раскройте датафрейм избавившись от вложенных датафреймов. Для обнаружения таких можно использовать функцию dplyr::glimpse() , а для раскрытия вложенности -- tidyr::unnest() . Обратите внимание, что при раскрытии теряются внешние названия колонок -- это можно предотвратить если использовать параметр tidyr::unnest(..., names_sep = ).

```{r}
data <- data %>% unnest(c(metadata, event, log, winlog, ecs, host, agent), names_sep = ".")
glimpse(data)
```

#### 2. Минимизируйте количество колонок в датафрейме -- уберите колоки с единственным значением параметра.

```{r}
data <- subset(data, select = - c(metadata.beat, metadata.type,metadata.version,metadata.topic,event.kind,winlog.api,agent.ephemeral_id,agent.hostname,agent.id,agent.version,agent.type))
data %>% glimpse()
```

#### 3. Какое количество хостов представлено в данном датасете?

```{r}
data %>% select(host.name) %>% unique()
```

#### 4. Подготовьте датафрейм с расшифровкой Windows Event_ID, приведите типы данных к типу их значений.

```{r}
webpage_url <- "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor"
webpage <- read_html(webpage_url)
events <- html_table(webpage)[[1]]
events <- events %>% rename(Current_Windows_Event_ID = `Current Windows Event ID`, Legacy_Windows_Event_ID = `Legacy Windows Event ID`, Potential_Criticality = `Potential Criticality`, Event_Summary = `Event Summary`)
events$Current_Windows_Event_ID <- as.integer(events$Current_Windows_Event_ID)
```

Подготовим данные:

```{r}
events$Legacy_Windows_Event_ID <- as.integer(events$Legacy_Windows_Event_ID)

glimpse(events)
```

#### 5. Есть ли в логе события с высоким и средним уровнем значимости? Сколько их?

```{r}
events %>% group_by(Potential_Criticality) %>%summarize(count = n()) %>%arrange(desc(count))
```

Количество событий со средним уровнем значимости: 79 Количество событий с высоким уровнем значимости: 9

## Оценка результата

В результате лабораторной работы были выполнены задания по анализу данных трафика Wi-Fi сетей

## Вывод

В ходе лабораторной работы были импортированы, подготовлены, проанализированы данные трафика Wi-Fi сетей
